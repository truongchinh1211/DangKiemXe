/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.Layout;

import controllers.AccountBUS;
import controllers.OwnerBUS;
import controllers.TransportationTypeBUS;
import controllers.TransportationBUS;
import java.time.Year;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import models.Account;
import models.Owner;
import models.Transportation;
import models.TransportationType;
import org.bson.types.ObjectId;
import view.custom.customDialog;

/**
 *
 * @author Son
 */
public class TransportationGUI extends javax.swing.JPanel {
    private final OwnerBUS ownerBUS;
    private final TransportationTypeBUS transportationTypeBUS;
    private final TransportationBUS transportationBUS;
    private Transportation selectedTransportation;
    private Account account;
    private AccountBUS accountBUS;
    
    /**
     * Creates new form OwnerGUI
     */
    public TransportationGUI(Account account) {
        initComponents();
        accountBUS = new AccountBUS();
        this.account = account;
        transportationBUS = new TransportationBUS();
        transportationTypeBUS = new TransportationTypeBUS();
        ownerBUS = new OwnerBUS();
        SwingUtilities.invokeLater(() -> {
            parentFrame = (MainLayout) SwingUtilities.getWindowAncestor(this);
        });
        ownerInfo = new customDialog(parentFrame);
        ownerInfo.setDialogContent(ownerPanel);
        getTranportationData();
        getTransportationTypeData();
    }
    public void getTranportationData(){
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        List<Transportation> transportations = transportationBUS.getAll();
        int i = 0;
        for(Transportation transportation:transportations){
            Object[] row = new Object[]{++i,transportation.getName(),transportation.getLicensePlate(),transportation.getOwner(),transportation.getId()};
            model.addRow(row);
        }
    }
    public void getTransportationDetail(Transportation transportation){
        if(transportation!=null){
            
            nameTxt.setText(transportation.getName());
            yearTxt.setText(transportation.getYear()+"");
            if(transportation.getTransportationType()!=null)
                typeCb.setSelectedItem(transportation.getTransportationType().getName());
            else 
                typeCb.setSelectedIndex(0);
            licensePlateTxt.setText(transportation.getLicensePlate());
            cmndTxt.setText(transportation.getOwner());
            descriptionTxt.setText(transportation.getDecription());
        }else {
            JOptionPane.showMessageDialog(parentFrame, "Có lỗi xảy ra, tiến hành tải lại trang...");
            getTranportationData();
        }
    }
    
    public void getTransportationTypeData(){
        Vector Items = new Vector();
        List<TransportationType> transportationTypes = transportationTypeBUS.getAll();
        Items.add("Chưa xác định");
        for(TransportationType transportationType: transportationTypes)
            Items.add(transportationType.getName());
        typeCb.setModel(new DefaultComboBoxModel(Items));
        }
    public void getOwnerData(){
        List<Owner> owners = ownerBUS.getAll();
        DefaultTableModel model = (DefaultTableModel) ownerTable.getModel();
        model.setRowCount(0);
        for(Owner owner:owners){
            Object[] row = new Object[]{owner.getCmnd(),owner.getFullName(),owner.getPhoneNumber()};
            model.addRow(row);
        }
    }
    
//
    public void refresh(){
        nameTxt.setText("");
        yearTxt.setText("");
        licensePlateTxt.setText("");
        typeCb.setSelectedIndex(0);
        cmndTxt.setText("");
        descriptionTxt.setText("");
    }
    public boolean validateField(){
        if(nameTxt.getText().isBlank()||yearTxt.getText().isBlank()||licensePlateTxt.getText().isBlank()||cmndTxt.getText().isBlank()
                ||descriptionTxt.getText().isBlank()){
            JOptionPane.showMessageDialog(contentPanel2, "Vui lòng không để trống thông tin");
            return false;
        }
        try{
            Year.parse(yearTxt.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(contentPanel2, "Sai định dạng năm sản xuất");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ownerPanel = new javax.swing.JPanel();
        ownerKeyword = new javax.swing.JTextField();
        button9 = new view.custom.Button();
        button10 = new view.custom.Button();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ownerTable = new javax.swing.JTable();
        contentPanel2 = new javax.swing.JPanel();
        roundPanel3 = new view.custom.RoundPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        button3 = new view.custom.Button();
        filter = new javax.swing.JComboBox<>();
        roundPanel4 = new view.custom.RoundPanel();
        jPanel3 = new javax.swing.JPanel();
        lblCategoryIDConfig = new javax.swing.JLabel();
        lblCategoryIDConfig1 = new javax.swing.JLabel();
        lblCategoryIDConfig2 = new javax.swing.JLabel();
        button4 = new view.custom.Button();
        button5 = new view.custom.Button();
        button6 = new view.custom.Button();
        button7 = new view.custom.Button();
        yearTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        typeCb = new javax.swing.JComboBox<>();
        lblCategoryIDConfig3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        licensePlateTxt = new javax.swing.JTextArea();
        lblCategoryIDConfig4 = new javax.swing.JLabel();
        cmndTxt = new javax.swing.JTextField();
        button8 = new view.custom.Button();
        lblCategoryIDConfig5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionTxt = new javax.swing.JTextArea();

        ownerPanel.setBackground(new java.awt.Color(255, 255, 255));
        ownerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        button9.setBackground(new java.awt.Color(204, 204, 255));
        button9.setBorder(null);
        button9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/wrench.png"))); // NOI18N
        button9.setText("Chọn");
        button9.setToolTipText("");
        button9.setBorderColor(new java.awt.Color(0, 0, 0));
        button9.setColor(new java.awt.Color(204, 204, 255));
        button9.setColorClick(new java.awt.Color(240, 235, 235));
        button9.setColorOver(new java.awt.Color(255, 255, 255));
        button9.setFocusPainted(false);
        button9.setRadius(20);
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button10.setBackground(new java.awt.Color(204, 204, 255));
        button10.setBorder(null);
        button10.setText("Tìm kiếm");
        button10.setToolTipText("");
        button10.setBorderColor(new java.awt.Color(0, 0, 0));
        button10.setColor(new java.awt.Color(204, 204, 255));
        button10.setColorClick(new java.awt.Color(240, 235, 235));
        button10.setColorOver(new java.awt.Color(255, 255, 255));
        button10.setFocusPainted(false);
        button10.setRadius(5);
        button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button10ActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(102, 153, 255));
        jButton1.setText("Quay lại");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ownerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CMND", "Tên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ownerTable);

        javax.swing.GroupLayout ownerPanelLayout = new javax.swing.GroupLayout(ownerPanel);
        ownerPanel.setLayout(ownerPanelLayout);
        ownerPanelLayout.setHorizontalGroup(
            ownerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ownerPanelLayout.createSequentialGroup()
                .addGroup(ownerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ownerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)
                        .addComponent(jButton1))
                    .addGroup(ownerPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(ownerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ownerPanelLayout.createSequentialGroup()
                                .addComponent(ownerKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        ownerPanelLayout.setVerticalGroup(
            ownerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ownerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(ownerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ownerKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(ownerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(8, 8, 8))
        );

        setPreferredSize(new java.awt.Dimension(1266, 550));

        contentPanel2.setBackground(new java.awt.Color(51, 51, 51));
        contentPanel2.setPreferredSize(new java.awt.Dimension(1266, 550));
        contentPanel2.setVerifyInputWhenFocusTarget(false);

        roundPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Tên xe", "Biển số", "Chủ sở hữu", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(10);
            table.getColumnModel().getColumn(4).setMinWidth(0);
            table.getColumnModel().getColumn(4).setPreferredWidth(0);
            table.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/search.png"))); // NOI18N
        button3.setText("Tìm kiếm");
        button3.setRadius(5);
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên xe", "Chủ sở hữu" }));

        javax.swing.GroupLayout roundPanel3Layout = new javax.swing.GroupLayout(roundPanel3);
        roundPanel3.setLayout(roundPanel3Layout);
        roundPanel3Layout.setHorizontalGroup(
            roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                    .addGroup(roundPanel3Layout.createSequentialGroup()
                        .addComponent(filter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        roundPanel3Layout.setVerticalGroup(
            roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(filter))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );

        roundPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin"));

        lblCategoryIDConfig.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblCategoryIDConfig.setText("Tên xe:");

        lblCategoryIDConfig1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblCategoryIDConfig1.setText("Loại xe:");

        lblCategoryIDConfig2.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblCategoryIDConfig2.setText("Năm sản xuất:");

        button4.setBackground(new java.awt.Color(204, 204, 255));
        button4.setBorder(null);
        button4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/plus.png"))); // NOI18N
        button4.setText("Thêm");
        button4.setToolTipText("");
        button4.setBorderColor(new java.awt.Color(0, 0, 0));
        button4.setColor(new java.awt.Color(204, 204, 255));
        button4.setColorClick(new java.awt.Color(240, 235, 235));
        button4.setColorOver(new java.awt.Color(255, 255, 255));
        button4.setFocusPainted(false);
        button4.setRadius(20);
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button5.setBackground(new java.awt.Color(204, 204, 255));
        button5.setBorder(null);
        button5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/wrench.png"))); // NOI18N
        button5.setText("Cập nhật");
        button5.setToolTipText("");
        button5.setBorderColor(new java.awt.Color(0, 0, 0));
        button5.setColor(new java.awt.Color(204, 204, 255));
        button5.setColorClick(new java.awt.Color(240, 235, 235));
        button5.setColorOver(new java.awt.Color(255, 255, 255));
        button5.setFocusPainted(false);
        button5.setRadius(20);
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setBackground(new java.awt.Color(204, 204, 255));
        button6.setBorder(null);
        button6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/refresh.png"))); // NOI18N
        button6.setText("Làm mới");
        button6.setToolTipText("");
        button6.setBorderColor(new java.awt.Color(0, 0, 0));
        button6.setColor(new java.awt.Color(204, 204, 255));
        button6.setColorClick(new java.awt.Color(240, 235, 235));
        button6.setColorOver(new java.awt.Color(255, 255, 255));
        button6.setFocusPainted(false);
        button6.setRadius(20);
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button7.setBackground(new java.awt.Color(204, 204, 255));
        button7.setBorder(null);
        button7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/remove.png"))); // NOI18N
        button7.setText("Xóa");
        button7.setToolTipText("");
        button7.setBorderColor(new java.awt.Color(0, 0, 0));
        button7.setColor(new java.awt.Color(204, 204, 255));
        button7.setColorClick(new java.awt.Color(240, 235, 235));
        button7.setColorOver(new java.awt.Color(255, 255, 255));
        button7.setFocusPainted(false);
        button7.setRadius(20);
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        lblCategoryIDConfig3.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblCategoryIDConfig3.setText("Biển số:");

        licensePlateTxt.setColumns(20);
        licensePlateTxt.setRows(5);
        jScrollPane1.setViewportView(licensePlateTxt);

        lblCategoryIDConfig4.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblCategoryIDConfig4.setText("Chủ sở hữu:");

        cmndTxt.setFocusable(false);

        button8.setBackground(new java.awt.Color(204, 204, 255));
        button8.setBorder(null);
        button8.setText("Chọn");
        button8.setToolTipText("");
        button8.setBorderColor(new java.awt.Color(0, 0, 0));
        button8.setColor(new java.awt.Color(204, 204, 255));
        button8.setColorClick(new java.awt.Color(240, 235, 235));
        button8.setColorOver(new java.awt.Color(255, 255, 255));
        button8.setFocusPainted(false);
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        lblCategoryIDConfig5.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblCategoryIDConfig5.setText("Thông tin thêm:");

        descriptionTxt.setColumns(20);
        descriptionTxt.setRows(5);
        jScrollPane2.setViewportView(descriptionTxt);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCategoryIDConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(nameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblCategoryIDConfig4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmndTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCategoryIDConfig2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCategoryIDConfig1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCategoryIDConfig3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(typeCb, 0, 152, Short.MAX_VALUE)
                                    .addComponent(yearTxt))
                                .addGap(0, 117, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCategoryIDConfig5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoryIDConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoryIDConfig1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoryIDConfig2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCategoryIDConfig3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addComponent(jScrollPane1))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblCategoryIDConfig4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmndTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCategoryIDConfig5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout roundPanel4Layout = new javax.swing.GroupLayout(roundPanel4);
        roundPanel4.setLayout(roundPanel4Layout);
        roundPanel4Layout.setHorizontalGroup(
            roundPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        roundPanel4Layout.setVerticalGroup(
            roundPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout contentPanel2Layout = new javax.swing.GroupLayout(contentPanel2);
        contentPanel2.setLayout(contentPanel2Layout);
        contentPanel2Layout.setHorizontalGroup(
            contentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addComponent(roundPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        contentPanel2Layout.setVerticalGroup(
            contentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roundPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2) {
            JTable target = (JTable) evt.getSource();
            int row = target.getSelectedRow();
            ObjectId id =(ObjectId) table.getValueAt(row, 4);
            selectedTransportation= transportationBUS.getById(id);
            getTransportationDetail(selectedTransportation);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        if(selectedTransportation!=null)
            getTransportationDetail(selectedTransportation);
        else 
            JOptionPane.showMessageDialog(contentPanel2, "Vui lòng chọn một đối tượng để thao táo");
    }//GEN-LAST:event_button6ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        if(accountBUS.getById(account.getId()).getRole().getTransportationManager()!=2){
            JOptionPane.showMessageDialog(contentPanel2, "Bạn không có quyền thao tác");
            return;
        }
        if(!validateField())
            return;
        String name = nameTxt.getText();
        Year year = Year.parse(yearTxt.getText());
        int yearToInt = year.getValue();
        String type = typeCb.getSelectedItem().toString();
        type = type.equals("Chưa xác định")?null:type;
        String licensePlate = licensePlateTxt.getText();
        TransportationType transportationType = transportationTypeBUS.getByName(type);
        if(transportationType==null){
            JOptionPane.showMessageDialog(parentFrame, "Có lỗi xảy ra ở loại xe, hãy thử tải lại ");
        }
        String cmnd = cmndTxt.getText();
        if(ownerBUS.getByCmnd(cmnd)==null){
            JOptionPane.showMessageDialog(contentPanel2, "Có lỗi xảy ra!! không tìm thấy chủ sở hữu, hãy chọn lại");
            return;
        }
        String description = descriptionTxt.getText();
        Transportation createTransportation = new Transportation( name, transportationType, yearToInt, licensePlate, cmnd, description);
        if(transportationBUS.save(createTransportation)){
            JOptionPane.showMessageDialog(contentPanel2, "Thêm thành công");
            refresh();
        }else{
            JOptionPane.showMessageDialog(contentPanel2, "Có lỗi xảy ra!!");
        }
        getTranportationData();
    }//GEN-LAST:event_button4ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        if(accountBUS.getById(account.getId()).getRole().getTransportationManager()!=2){
            JOptionPane.showMessageDialog(contentPanel2, "Bạn không có quyền thao tác");
            return;
        }
        if(selectedTransportation==null){
            JOptionPane.showMessageDialog(parentFrame, "Vui lòng chọn một đối tượng để thao tác");
            return;
        }
        if(!validateField())
            return;
        String name = nameTxt.getText();
        Year year = Year.parse(yearTxt.getText());
        int yearToInt = year.getValue();
        String type = typeCb.getSelectedItem().toString();
        type = type.equals("Chưa xác định")?null:type;
        String licensePlate = licensePlateTxt.getText();
        TransportationType transportationType = transportationTypeBUS.getByName(type);
        if(transportationType==null){
            JOptionPane.showMessageDialog(parentFrame, "Có lỗi xảy ra ở loại xe, hãy thử tải lại ");
        }
        String cmnd = cmndTxt.getText();
        if(ownerBUS.getByCmnd(cmnd)==null){
            JOptionPane.showMessageDialog(contentPanel2, "Có lỗi xảy ra!! không tìm thấy chủ sở hữu, hãy chọn lại");
            return;
        }
        String description = descriptionTxt.getText();
        selectedTransportation.setName(name);
        selectedTransportation.setTransportationType(transportationType);
        selectedTransportation.setLicensePlate(licensePlate);
        selectedTransportation.setYear(yearToInt);
        selectedTransportation.setOwner(cmnd);
        selectedTransportation.setDecription(description);
        if(transportationBUS.save(selectedTransportation)){
            JOptionPane.showMessageDialog(contentPanel2, "Cập nhật thành công");
            refresh();
            selectedTransportation=null;
        }else{
            JOptionPane.showMessageDialog(contentPanel2, "Có lỗi xảy ra!!");
        }
        getTranportationData();
    }//GEN-LAST:event_button5ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        if(accountBUS.getById(account.getId()).getRole().getTransportationManager()!=2){
            JOptionPane.showMessageDialog(contentPanel2, "Bạn không có quyền thao tác");
            return;
        }
        if(selectedTransportation!=null){
            if(transportationBUS.delete(selectedTransportation))
                JOptionPane.showMessageDialog(contentPanel2, "Xóa thành công");
            else 
                JOptionPane.showMessageDialog(contentPanel2,"Có lỗi xảy ra!!Tiến hành tải lại trang...");
            refresh();
            getTranportationData();
        }else {
            JOptionPane.showMessageDialog(contentPanel2, "Vui lòng chọn một đối tượng để thao tác");
        }
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
//        if(selectedTransportation!=null)
        getOwnerData();
        ownerInfo.setVisible(true);
    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        int index = ownerTable.getSelectedRow();
        if(index!=-1){
            String cmnd = ownerTable.getValueAt(index, 0).toString();
            
            Owner selectedOwner = ownerBUS.getByCmnd(cmnd);
            if(selectedOwner!=null){
                cmndTxt.setText(selectedOwner.getCmnd());
                ownerInfo.setVisible(false);
            }else {
                JOptionPane.showMessageDialog(parentFrame, "Có lỗi xảy ra, hãy thử lại");
                getOwnerData();
            }
        }
    }//GEN-LAST:event_button9ActionPerformed

    private void button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button10ActionPerformed
        DefaultTableModel model = (DefaultTableModel) ownerTable.getModel();
        String keyword = ownerKeyword.getText();
        model.setRowCount(0);
        List<Owner> owners = ownerBUS.getByCmndKeyword(keyword);
        for(Owner owner: owners){
            Object[] row = new Object[]{owner.getCmnd(),owner.getFullName()};
            model.addRow(row);
        }
    }//GEN-LAST:event_button10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ownerInfo.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        String keyword = search.getText();
        List<Transportation> transportations;
        if(filter.getSelectedIndex()==0)
            transportations = transportationBUS.getByNameKeyword(keyword);
        else 
            transportations = transportationBUS.getByOwnerCMNDKeyword(keyword);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        int i=0;
        if(transportations!=null)
        for(Transportation transportation: transportations){
            Object[] row = new Object[]{++i,transportation.getName(),transportation.getLicensePlate(),transportation.getOwner(),transportation.getId()};
            model.addRow(row);
        }
    }//GEN-LAST:event_button3ActionPerformed

    private MainLayout parentFrame;
    private customDialog ownerInfo;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.custom.Button button10;
    private view.custom.Button button3;
    private view.custom.Button button4;
    private view.custom.Button button5;
    private view.custom.Button button6;
    private view.custom.Button button7;
    private view.custom.Button button8;
    private view.custom.Button button9;
    private javax.swing.JTextField cmndTxt;
    private javax.swing.JPanel contentPanel2;
    private javax.swing.JTextArea descriptionTxt;
    private javax.swing.JComboBox<String> filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblCategoryIDConfig;
    private javax.swing.JLabel lblCategoryIDConfig1;
    private javax.swing.JLabel lblCategoryIDConfig2;
    private javax.swing.JLabel lblCategoryIDConfig3;
    private javax.swing.JLabel lblCategoryIDConfig4;
    private javax.swing.JLabel lblCategoryIDConfig5;
    private javax.swing.JTextArea licensePlateTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField ownerKeyword;
    private javax.swing.JPanel ownerPanel;
    private javax.swing.JTable ownerTable;
    private view.custom.RoundPanel roundPanel3;
    private view.custom.RoundPanel roundPanel4;
    private javax.swing.JTextField search;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> typeCb;
    private javax.swing.JTextField yearTxt;
    // End of variables declaration//GEN-END:variables
}
